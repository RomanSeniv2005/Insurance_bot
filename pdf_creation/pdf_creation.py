from reportlab.pdfgen import canvas 
from reportlab.lib.pagesizes import A4
from reportlab.platypus import Table, TableStyle
from reportlab.lib import colors
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os
from datetime import date

def generate_insurance_pdf(passport_result: dict, car_doc_result: dict, price: int | float) -> str:
    font_path = os.path.join(os.path.dirname(__file__), "fonts", "DejaVuSans.ttf")
    pdfmetrics.registerFont(TTFont("DejaVuSans", font_path))

    full_name = f"{passport_result.get('surname', '')} {passport_result.get('given_names', '')}".strip() or "–ù–µ–≤—ñ–¥–æ–º–æ"
    vin_code = car_doc_result.get("vin_code", "–ù–µ–≤—ñ–¥–æ–º–æ")
    registration_number = car_doc_result.get("registration_number", "–ù–µ–≤—ñ–¥–æ–º–æ")
    car_brand = car_doc_result.get("car_brand", "–ù–µ–≤—ñ–¥–æ–º–æ")
    car_model = car_doc_result.get("car_model", "")
    year = car_doc_result.get("year_of_manufacture", "–ù–µ–≤—ñ–¥–æ–º–æ")

    try:
        year = str(int(float(year)))
    except:
        year = str(year)

    file_path = f"insurance_policies/–ü–æ–ª—ñ—Å_{full_name.replace(' ', '_')}.pdf"
    os.makedirs(os.path.dirname(file_path), exist_ok=True)

    c = canvas.Canvas(file_path, pagesize=A4)
    c.setFont("DejaVuSans", 12)

    width, height = A4

    # üè¢ –õ–æ–≥–æ—Ç–∏–ø
    logo_path = os.path.join(os.path.dirname(__file__), "assets", "logo.png")
    if os.path.exists(logo_path):
        c.drawImage(logo_path, 50, height - 100, width=60, height=60, mask='auto')

    # üè¢ –ù–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó
    c.setFont("DejaVuSans", 18)
    c.drawCentredString(width / 2 + 30, height - 60, "–¢–û–í '–£–ö–†–°–¢–†–ê–•–ì–ê–†–ê–ù–¢'")
    c.setFont("DejaVuSans", 13)
    c.drawCentredString(width / 2 + 30, height - 80, "–ü–û–õ–Ü–° –°–¢–†–ê–•–£–í–ê–ù–ù–Ø –ê–í–¢–û–¢–†–ê–ù–°–ü–û–†–¢–ù–û–ì–û –ó–ê–°–û–ë–£")

    # üìÑ –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    data = [
        ["–ü–Ü–ë –≤–ª–∞—Å–Ω–∏–∫–∞:", full_name],
        ["VIN-–∫–æ–¥:", vin_code],
        ["–ù–æ–º–µ—Ä–Ω–∏–π –∑–Ω–∞–∫:", registration_number],
        ["–ú–∞—Ä–∫–∞ —Ç–∞ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ:", f"{car_brand} {car_model}".strip()],
        ["–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:", year],
        ["–û—Ü—ñ–Ω–æ—á–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∞–≤—Ç–æ:", f"{price} USD"],
        ["–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É –¥—ñ—ó:", date.today().strftime("%d.%m.%Y")],
        ["–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –¥—ñ—ó:", (date.today().replace(year=date.today().year + 1)).strftime("%d.%m.%Y")],
        ["–°—Ç—Ä–∞—Ö–æ–≤–∞ —Å—É–º–∞:", f"{price} USD"],
        ["–¢–∏–ø —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è:", "–ö–ê–°–ö–û (–≤—Å—ñ —Ä–∏–∑–∏–∫–∏)"],
        ["–§—Ä–∞–Ω—à–∏–∑–∞:", "0%"],
    ]

    table = Table(data, colWidths=[180, 360])
    table.setStyle(TableStyle([
        ("FONTNAME", (0, 0), (-1, -1), "DejaVuSans"),
        ("GRID", (0, 0), (-1, -1), 1, colors.grey),
        ("BACKGROUND", (0, 0), (0, -1), colors.whitesmoke),
        ("TEXTCOLOR", (0, 0), (-1, -1), colors.black),
        ("ALIGN", (0, 0), (-1, -1), "LEFT"),
        ("FONTSIZE", (0, 0), (-1, -1), 11),
        ("BOTTOMPADDING", (0, 0), (-1, -1), 6),
    ]))

    table.wrapOn(c, 50, 400)
    table.drawOn(c, 50, height - 360)

    # üìú –£–º–æ–≤–∏ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è
    text_y = height - 420 - (len(data) * 20)
    c.setFont("DejaVuSans", 11)
    c.drawString(50, text_y, "–£–º–æ–≤–∏ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è:")
    conditions = [
        "- –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –¥—ñ—î –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏.",
        "- –í–∏–ø–ª–∞—Ç–∞ —É —Ä–∞–∑—ñ –î–¢–ü, –≤–∏–∫—Ä–∞–¥–µ–Ω–Ω—è, —Å—Ç–∏—Ö—ñ–π–Ω–æ–≥–æ –ª–∏—Ö–∞.",
        "- –í–∏–ø–ª–∞—Ç–∏ –∑–¥—ñ–π—Å–Ω—é—é—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 10 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤ –ø—ñ—Å–ª—è –ø–æ–¥–∞–Ω–Ω—è –∑–∞—è–≤–∏.",
        "- –ü—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ –ø–æ–ª—ñ—Å–∞ –π–æ–≥–æ –º–æ–∂–Ω–∞ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –∑–∞ –∑–∞—è–≤–æ—é –≤–ª–∞—Å–Ω–∏–∫–∞.",
    ]
    y = text_y - 20
    for condition in conditions:
        c.drawString(60, y, condition)
        y -= 18

    # ‚úçÔ∏è –ü—ñ–¥–ø–∏—Å —ñ –¥–∞—Ç–∞
    c.setFont("DejaVuSans", 12)
    c.drawString(50, y - 30, "–ü—ñ–¥–ø–∏—Å —Å—Ç—Ä–∞—Ö–æ–≤–∏–∫–∞: ____________________")
    c.drawString(50, y - 50, "–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è: " + date.today().strftime("%d.%m.%Y"))

    c.save()
    return file_path
